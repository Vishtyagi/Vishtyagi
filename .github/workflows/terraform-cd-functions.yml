name: 'Terraform CD - Lambda Infrastructure'
run-name: ${{ inputs.destroy_enabled != true && 'Apply' || 'Destroy' }} Function - ${{ inputs.function_to_deploy }} - ${{ inputs.environment }}

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Select the GitHub Environment to use:'
        required: true
        options: [eresconnect-preprod1, eresconnect-preprod2, eresconnect-prod, dcp-dev4]
      destroy_enabled:
        required: true
        type: boolean
        description: 'Select to destroy resources, otherwise leave unselected'
        default: false
      function_to_deploy:
        required: false
        type: choice
        description: 'Select Lambda to deploy:'
        options:
          - All
          - SendMemberUpdateToForgeRockLambda


jobs:
  GitVersion:
    name: Get image tag
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.gitversion.outputs.EscapedBranchName }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: GitVersion
        id: gitversion
        uses: easyjet-dev/reusable-workflows/.github/actions/git-version@v1.4.4
        with:
          git-tool-latest: true
          use-config-file: true
  Setup:
    runs-on: ubuntu-latest
    outputs:
      working-directories: ${{ steps.get-directories.outputs.directories }}
      review-environment: ${{ steps.get-review-env.outputs.review_env}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Get functions
        id: get-directories
        shell: pwsh
        run: |
          if ("${{ inputs.function_to_deploy }}" -eq "All") {
            $formattedDirectories = "[`'" + ((Get-Childitem -Path "terraform/functions" -Directory).Name -join "','") + "`']"
          }
          else {
            $formattedDirectories = "[`'${{ inputs.function_to_deploy }}`']"
          }
          "directories=$formattedDirectories" >> $env:GITHUB_OUTPUT
      - name: Get Review Environment
        id: get-review-env
        shell: pwsh
        run: |
          if ("${{ inputs.environment }}" -eq "prod") {
            "review_env=ProdReview" >> $env:GITHUB_OUTPUT
          }
          else {
            "review_env=NonProdReview" >> $env:GITHUB_OUTPUT
          }

  TerraformCD:
    name: ${{ inputs.destroy_enabled != true && 'Apply' || 'Destroy' }} - ${{ matrix.directory }}
    needs: [Setup, GitVersion]
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.Setup.outputs.working-directories) }}
    concurrency:
      group: 'terraform-eresconnect-ejplus-functions-${{ matrix.directory }}'
    uses: easyjet-dev/reusable-workflows/.github/workflows/terraform-single-approval-cd-using-oidc.yml@v2
    with:
      environment: ${{ inputs.environment }}
      approval_environment: ${{ needs.Setup.outputs.review-environment }}
      tf_version: ${{ vars.TF_VERSION }}
      tf_working_directory: 'terraform/functions/${{ matrix.directory }}'
      tf_workspace: '${{ inputs.environment }}'
      tfstate_dynamodb_table: 'tf-locks--commercial-systems'
      tfstate_workspace_key_prefix: '${{ github.event.repository.name }}'
      tfstate_key: 'terraform/functions/${{ matrix.directory }}/infrastructure.tfstate'
      destroy_enabled: ${{ inputs.destroy_enabled }}
      tfstate_backend_config_file: '../../backends/nonprod.tfbackend'
      additional_tfvars: -var-file=../../input-vars/common.tfvars -var-file=../../input-vars/${{ inputs.environment }}.tfvars -var-file=./input-vars/common.tfvars -var-file=./input-vars/${{ inputs.environment }}.tfvars -var=''tag_git_source=${{github.server_url}}/${{github.repository}}'' -var=''tag_git_sha=${{github.sha}}'' -var=''tag_git_branch=${{github.ref_name}}'' -var=''lambda_package_version=${{needs.GitVersion.outputs.package_version}}
    secrets: inherit
